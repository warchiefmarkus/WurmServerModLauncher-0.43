/*     */ package 1.0.com.sun.tools.xjc.generator.field;
/*     */ 
/*     */ import com.sun.codemodel.JBlock;
/*     */ import com.sun.codemodel.JClass;
/*     */ import com.sun.codemodel.JExpr;
/*     */ import com.sun.codemodel.JExpression;
/*     */ import com.sun.codemodel.JForLoop;
/*     */ import com.sun.codemodel.JMethod;
/*     */ import com.sun.codemodel.JOp;
/*     */ import com.sun.codemodel.JType;
/*     */ import com.sun.codemodel.JVar;
/*     */ import com.sun.tools.xjc.generator.ClassContext;
/*     */ import com.sun.tools.xjc.generator.JavadocBuilder;
/*     */ import com.sun.tools.xjc.generator.field.AbstractListFieldRenderer;
/*     */ import com.sun.tools.xjc.grammar.FieldUse;
/*     */ import java.util.List;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ public class UntypedListFieldRenderer
/*     */   extends AbstractListFieldRenderer
/*     */ {
/*     */   protected UntypedListFieldRenderer(ClassContext context, FieldUse fu, JClass coreList) {
/*  52 */     super(context, fu, coreList);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public void generateAccessors() {
/*  89 */     JMethod $get = this.writer.declareMethod(List.class, "get" + this.fu.name);
/*  90 */     this.writer.javadoc().appendComment(this.fu.getJavadoc());
/*  91 */     JBlock body = $get.body();
/*  92 */     if (this.$defValues != null) {
/*  93 */       JBlock then = body._if(JOp.cand(hasSetValue().not(), (JExpression)ref(false).invoke("isEmpty")))._then();
/*     */       
/*  95 */       JForLoop loop = then._for();
/*  96 */       JVar $i = loop.init((JType)this.codeModel.INT, "__i", JExpr.lit(0));
/*  97 */       loop.test($i.lt((JExpression)this.$defValues.ref("length")));
/*  98 */       loop.update($i.incr());
/*  99 */       loop.body().invoke(ref(true), "add").arg(box((JExpression)this.$defValues.component((JExpression)$i)));
/*     */       
/* 101 */       then.invoke(ref(true), "setModified").arg(JExpr.FALSE);
/*     */     } 
/* 103 */     body._return(ref(false));
/*     */ 
/*     */     
/* 106 */     this.writer.javadoc().appendComment("Gets the value of the " + this.fu.name + " property.\n\n" + "<p>\n" + "This accessor method returns a reference to the live list,\n" + "not a snapshot. Therefore any modification you make to the\n" + "returned list will be present inside the JAXB object.\n" + "This is why there is not a <CODE>set</CODE> method for the " + this.fu.name + " property.\n" + "\n" + "<p>\n" + "For example, to add a new item, do as follows:\n" + "<pre>\n" + "   get" + this.fu.name + "().add(newItem);\n" + "</pre>\n" + "\n\n");
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 122 */     this.writer.javadoc().appendComment("<p>\nObjects of the following type(s) are allowed in the list\n" + JavadocBuilder.listPossibleTypes(this.fu));
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 137 */     if (this.$defValues != null) {
/* 138 */       JMethod $delete = this.writer.declareMethod((JType)this.codeModel.VOID, "delete" + this.fu.name);
/* 139 */       this.writer.javadoc().setDeprecated("this method is incorrectly generated by previous\nreleases of the RI. This method remains here just to make \nthe generated code backward compatible.\nApplications should <strong>NOT</strong> rely on this method, and\nif it needs this capability, it should use the unset" + this.fu.name + " method.\n" + "To generate the unset" + this.fu.name + " method, please use \n" + "the <code>generateIsSetMethod</code> attribute on\n" + "<code>globalBindings</code> or <code>property</code> customization.");
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/* 148 */       unsetValues($delete.body());
/*     */     } 
/*     */   }
/*     */ }


/* Location:              C:\Users\leo\Desktop\server.jar!\1.0\com\sun\tools\xjc\generator\field\UntypedListFieldRenderer.class
 * Java compiler version: 2 (46.0)
 * JD-Core Version:       1.1.3
 */